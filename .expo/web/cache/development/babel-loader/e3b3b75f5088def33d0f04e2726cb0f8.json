{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\Articles_App\\\\Screens\\\\Reading.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar ReadingScreen = function (_React$Component) {\n  _inherits(ReadingScreen, _React$Component);\n\n  var _super = _createSuper(ReadingScreen);\n\n  function ReadingScreen(data) {\n    var _this;\n\n    _classCallCheck(this, ReadingScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      articleDetails: data.route.params.details,\n      windowWidth: Dimensions.get(\"window\").width\n    };\n    return _this;\n  }\n\n  _createClass(ReadingScreen, [{\n    key: \"render\",\n    value: function render() {\n      var articleDetails = this.state.articleDetails;\n      var text = articleDetails.text,\n          title = articleDetails.title,\n          url = articleDetails.url;\n      console.log(this.state.articleDetails);\n      return React.createElement(ScrollView, {\n        style: {\n          margin: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, \"Title:\"), React.createElement(Text, {\n        style: {\n          fontStyle: \"italic\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, \"\\t\", title)), React.createElement(View, {\n        style: {\n          width: \"100%\",\n          height: 30,\n          alignContent: \"flex-end\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/hear.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"Text:\"), React.createElement(Text, {\n        style: {\n          fontStyle: \"italic\",\n          fontFamily: \"sans-serif-condensed\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, \"\\t\", text)));\n    }\n  }]);\n\n  return ReadingScreen;\n}(React.Component);\n\nexport { ReadingScreen as default };","map":{"version":3,"sources":["D:/Apps/Articles_App/Screens/Reading.js"],"names":["React","ReadingScreen","data","state","articleDetails","route","params","details","windowWidth","Dimensions","get","width","text","title","url","console","log","margin","fontWeight","fontSize","fontStyle","height","alignContent","require","marginTop","fontFamily","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;IAUqBC,a;;;;;AACnB,yBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChB;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAEF,IAAI,CAACG,KAAL,CAAWC,MAAX,CAAkBC,OADvB;AAEXC,MAAAA,WAAW,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;AAF3B,KAAb;AAFgB;AAMjB;;;;WACD,kBAAS;AACP,UAAMP,cAAN,GAAyB,KAAKD,KAA9B,CAAMC,cAAN;AACA,UAAQQ,IAAR,GAA6BR,cAA7B,CAAQQ,IAAR;AAAA,UAAcC,KAAd,GAA6BT,cAA7B,CAAcS,KAAd;AAAA,UAAqBC,GAArB,GAA6BV,cAA7B,CAAqBU,GAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,cAAvB;AACA,aACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEa,UAAAA,MAAM,EAAE;AAAV,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,QAAQ,EAAE;AAAhC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,IADH,EAEGP,KAFH,CAFF,CADF,EAQE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAE,MAAT;AAAiBU,UAAAA,MAAM,EAAE,EAAzB;AAA6BC,UAAAA,YAAY,EAAE;AAA3C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,sBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CARF,EAaE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEN,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,QAAQ,EAAE;AAAhC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBK,UAAAA,UAAU,EAAE;AAAnC,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGG,IAHH,EAIGb,IAJH,CAFF,CAbF,CADF;AAyBD;;;;EArCwCZ,KAAK,CAAC0B,S;;SAA5BzB,a","sourcesContent":["import React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n  Image,\r\n  Dimensions,\r\n} from \"react-native\";\r\n\r\nexport default class ReadingScreen extends React.Component {\r\n  constructor(data) {\r\n    super();\r\n    this.state = {\r\n      articleDetails: data.route.params.details,\r\n      windowWidth: Dimensions.get(\"window\").width,\r\n    };\r\n  }\r\n  render() {\r\n    var { articleDetails } = this.state;\r\n    const { text, title, url } = articleDetails;\r\n    console.log(this.state.articleDetails);\r\n    return (\r\n      <ScrollView style={{ margin: 20 }}>\r\n        <View>\r\n          <Text style={{ fontWeight: \"bold\", fontSize: 18 }}>Title:</Text>\r\n          <Text style={{ fontStyle: \"italic\" }}>\r\n            {\"\\t\"}\r\n            {title}\r\n          </Text>\r\n        </View>\r\n        <View style={{ width: \"100%\", height: 30, alignContent: \"flex-end\" }}>\r\n          <TouchableOpacity style={{}}>\r\n            <Image source={require(\"../assets/hear.png\")} />\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={{ marginTop: 20 }}>\r\n          <Text style={{ fontWeight: \"bold\", fontSize: 18 }}>Text:</Text>\r\n          <Text\r\n            style={{ fontStyle: \"italic\", fontFamily: \"sans-serif-condensed\" }}\r\n          >\r\n            {\"\\t\"}\r\n            {text}\r\n          </Text>\r\n        </View>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}